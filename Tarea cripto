import random

# Diccionario de sustitución homofónica simple
homophonic_table = {
    'A': ['10', '11'],
    'B': ['20'],
    'C': ['30'],
    'D': ['40'],
    'E': ['50', '51', '52'],
    'F': ['60'],
    'G': ['70'],
    'H': ['80'],
    'I': ['90', '91'],
    'J': ['92'],
    'K': ['93'],
    'L': ['94'],
    'M': ['95'],
    'N': ['96'],
    'O': ['97', '98'],
    'P': ['99'],
    'Q': ['100'],
    'R': ['101'],
    'S': ['102'],
    'T': ['103'],
    'U': ['104'],
    'V': ['105'],
    'W': ['106'],
    'X': ['107'],
    'Y': ['108'],
    'Z': ['109']
}

def homophonic_encrypt(message):
    encrypted = []
    message = message.upper()
    for char in message:
        if char in homophonic_table:
            encrypted.append(random.choice(homophonic_table[char]))
        else:
            encrypted.append(char)  # Mantener espacios y signos
    return ' '.join(encrypted)

# Ejemplo
plaintext = "HOLA MUNDO"
ciphertext = homophonic_encrypt(plaintext)
print("Texto original:", plaintext)
print("Texto cifrado:", ciphertext)